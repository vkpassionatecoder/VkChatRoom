<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ChatCord App</title>
</head>

 <body>
    <header class="custom-navbar">
    <div class="container-fluid">
      <h1  style ="color:#fff"class="text-center">Welcome to Vchat</h1>
    </div>
  </header>
  <content>
      <div class="chat-container">
        <header class="chat-header">
          <h1><i class="fas fa-smile"></i> Vchat</h1>
          <a href="/" class="btn">Leave Room</a>
        </header>
        <div class="chat-main">
        <input type="hidden" id="username" value={{user}}>
        <div class="chat-sidebar">
          <h3><i class="fas fa-comments"></i> Room ID:</h3>
          <h2 id="room-name">{{roomId}}</h2>
          <h3><i class="fas fa-users"></i> Users</h3>
          <ul id="users" style="min-height:184px;overflow:auto">
          </ul>
        </div>
        <div class="chat-messages">
          
        </div>
        
      </div> 
        
      </div>
  </content>
  <footer class="chat-form-container">
      <form id="chat-form">
        <input
          id="msg"
          type="text"
          placeholder="Enter Message"
          required
          autocomplete="off"
        />
        <button class="btn"><i class="fas fa-paper-plane"></i> Send</button>
      </form>
    </footer>

 </body>
 
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const chatMessages = document.querySelector(".chat-messages");
          let username = $("#username").val();
          let room = $("#room-name").text();
          let userList = document.getElementById("users");
          //initialize
        let socket= io();

        // Join Chat Room
        socket.emit("joinRoom",{username,room})

        //Get All Users in a room
        socket.on("roomUsers",(users)=>{
          console.log(users);
          displayUsers(users);
        })

    socket.on("message",(data)=>{
     console.log(data);
     outputMessage(data);
   chatMessages.scrollTop = chatMessages.scrollHeight;
    })


    $("#chat-form").on("submit",(e)=>{
        e.preventDefault();
       let msg = e.target.elements.msg.value;
       e.target.elements.msg.value = "";
        e.target.elements.msg.focus();
       socket.emit("chatMessage",msg);
    })
    outputMessage = (msg)=>{
       const div = document.createElement("div");
       div.classList.add("message");
       div.innerHTML = `
       	<p class="meta">${msg.user} <span>${msg.time}</span></p>
						<p class="text">
					      ${msg.message}
						</p>
       `
        $(".chat-messages").append(div);
    }
   displayUsers = (users)=>{
     userList.innerHTML = `
      ${users.map(user=>`<li>${user.username}</li>`).join('')}
     `;
   }
    </script>
</html>
